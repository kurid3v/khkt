# from flask import Flask, request, jsonify
# import requests

# app = Flask(__name__)

# GEMINI_API_KEY = "AIzaSyCjkMcW81IOJjSOj0QzPxw1-8AjeSxJw64"
# GEMINI_URL = f"https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key={GEMINI_API_KEY}"

# @app.route('/grade', methods=['POST'])
# def grade():
#     data = request.get_json()
#     question = data.get('question', '')
#     answer = data.get('answer', '')

#     prompt = f"""B·∫°n l√† gi√°o vi√™n. H√£y ch·∫•m b√†i h·ªçc sinh nh∆∞ m·ªôt gi√°m kh·∫£o chuy√™n nghi·ªáp.
#     ƒê·ªÅ b√†i: {question}
#     B√†i l√†m h·ªçc sinh: {answer}
    
#     H√£y tr·∫£ v·ªÅ theo ƒë·ªãnh d·∫°ng:
#     ƒêi·ªÉm: x/10
#     Nh·∫≠n x√©t: ..."""

#     response = requests.post(GEMINI_URL, json={
#         "contents": [{"parts": [{"text": prompt}]}]
#     })

#     try:
#         result = response.json()["candidates"][0]["content"]["parts"][0]["text"]
#     except Exception:
#         result = "Kh√¥ng th·ªÉ ch·∫•m b√†i (l·ªói AI)"

#     return jsonify({"result": result})

# if __name__ == '__main__':
#     app.run(port=5000)

from flask import Flask, request, jsonify
import requests

app = Flask(__name__)

GEMINI_API_KEY = "AIzaSyDEcVqdViepruNXNYL04wbo3j_om1pyg4w"
GEMINI_URL = f"https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key={GEMINI_API_KEY}"
@app.route('/grade', methods=['POST'])
def grade():
    data = request.get_json()
    question = data.get('question', '')
    answer = data.get('answer', '')
    criteria = data.get('criteria', '')

    prompt = f"""B·∫°n l√† gi√°o vi√™n. H√£y ch·∫•m b√†i h·ªçc sinh nh∆∞ m·ªôt gi√°m kh·∫£o chuy√™n nghi·ªáp.
ƒê·ªÅ b√†i: {question}
Ti√™u ch√≠ ch·∫•m: {criteria if criteria else 'ch·∫•m t·ª± do'}
B√†i l√†m h·ªçc sinh: {answer}

H√£y tr·∫£ v·ªÅ theo ƒë·ªãnh d·∫°ng:
ƒêi·ªÉm: x/10
Nh·∫≠n x√©t: ...
"""

    print("üì• Prompt g·ª≠i Gemini:")
    print(prompt)

    try:
        response = requests.post(GEMINI_URL, json={
            "contents": [{"parts": [{"text": prompt}]}]
            
        })
        print(response.status_code)
        print(response.text)
        print("üì§ Gemini response (raw):")
        print(response.text)

        json_response = response.json()
        result = json_response["candidates"][0]["content"]["parts"][0]["text"]
        return jsonify({"result": result})

    except Exception as e:
        print("‚ùå L·ªói khi x·ª≠ l√Ω Gemini response:")
        print(str(e))
        return jsonify({"result": "Kh√¥ng th·ªÉ ch·∫•m b√†i (l·ªói AI n·ªôi b·ªô)"}), 500


if __name__ == '__main__':
    app.run(port=5000)